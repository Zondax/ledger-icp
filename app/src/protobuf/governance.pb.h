/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_IC_NNS_GOVERNANCE_PB_V1_GOVERNANCE_PB_H_INCLUDED
#define PB_IC_NNS_GOVERNANCE_PB_V1_GOVERNANCE_PB_H_INCLUDED

#include <pb.h>
#include "types.pb.h"
#include "base_types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ic_nns_governance_pb_v1_Vote {
    ic_nns_governance_pb_v1_Vote_VOTE_UNSPECIFIED = 0,
    ic_nns_governance_pb_v1_Vote_VOTE_YES = 1,
    ic_nns_governance_pb_v1_Vote_VOTE_NO = 2
} ic_nns_governance_pb_v1_Vote;

typedef enum _ic_nns_governance_pb_v1_Topic {
    ic_nns_governance_pb_v1_Topic_TOPIC_UNSPECIFIED = 0,
    ic_nns_governance_pb_v1_Topic_TOPIC_NEURON_MANAGEMENT = 1,
    ic_nns_governance_pb_v1_Topic_TOPIC_EXCHANGE_RATE = 2,
    ic_nns_governance_pb_v1_Topic_TOPIC_NETWORK_ECONOMICS = 3,
    ic_nns_governance_pb_v1_Topic_TOPIC_GOVERNANCE = 4,
    ic_nns_governance_pb_v1_Topic_TOPIC_NODE_ADMIN = 5,
    ic_nns_governance_pb_v1_Topic_TOPIC_PARTICIPANT_MANAGEMENT = 6,
    ic_nns_governance_pb_v1_Topic_TOPIC_SUBNET_MANAGEMENT = 7,
    ic_nns_governance_pb_v1_Topic_TOPIC_NETWORK_CANISTER_MANAGEMENT = 8,
    ic_nns_governance_pb_v1_Topic_TOPIC_KYC = 9,
    ic_nns_governance_pb_v1_Topic_TOPIC_NODE_PROVIDER_REWARDS = 10
} ic_nns_governance_pb_v1_Topic;

typedef enum _ic_nns_governance_pb_v1_GovernanceError_ErrorType {
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_UNSPECIFIED = 0,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_OK = 1,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_UNAVAILABLE = 2,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_NOT_AUTHORIZED = 3,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_NOT_FOUND = 4,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INVALID_COMMAND = 5,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_REQUIRES_NOT_DISSOLVING = 6,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_REQUIRES_DISSOLVING = 7,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_REQUIRES_DISSOLVED = 8,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_HOT_KEY = 9,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_RESOURCE_EXHAUSTED = 10,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_PRECONDITION_FAILED = 11,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_EXTERNAL = 12,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_LEDGER_UPDATE_ONGOING = 13,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INSUFFICIENT_FUNDS = 14,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INVALID_PRINCIPAL = 15,
    ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INVALID_PROPOSAL = 16
} ic_nns_governance_pb_v1_GovernanceError_ErrorType;

/* Struct definitions */
typedef struct _ic_nns_governance_pb_v1_ListNeuronsResponse {
    pb_callback_t neuron_ids;
    pb_callback_t full_neurons;
} ic_nns_governance_pb_v1_ListNeuronsResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_StartDissolving {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuron_StartDissolving;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_StopDissolving {
    char dummy_field;
} ic_nns_governance_pb_v1_ManageNeuron_StopDissolving;

typedef struct _ic_nns_governance_pb_v1_Neuron_Followees {
    pb_callback_t followees;
} ic_nns_governance_pb_v1_Neuron_Followees;

typedef struct _ic_nns_governance_pb_v1_BallotInfo {
    bool has_proposal_id;
    ic_base_types_pb_v1_ProposalId proposal_id;
    ic_nns_governance_pb_v1_Vote vote;
} ic_nns_governance_pb_v1_BallotInfo;

typedef struct _ic_nns_governance_pb_v1_GovernanceError {
    ic_nns_governance_pb_v1_GovernanceError_ErrorType error_type;
    pb_callback_t error_message;
} ic_nns_governance_pb_v1_GovernanceError;

typedef struct _ic_nns_governance_pb_v1_ListNeurons {
    pb_callback_t neuron_ids;
    bool include_neurons_readable_by_caller;
} ic_nns_governance_pb_v1_ListNeurons;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse {
    uint64_t transfer_block_height;
} ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse {
    uint64_t merged_maturity_e8s;
    uint64_t new_stake_e8s;
} ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse {
    bool has_created_neuron_id;
    ic_base_types_pb_v1_NeuronId created_neuron_id;
} ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_AddHotKey {
    /* Was originally `map<fixed64, NeuronInfo> neuron_infos = 1`
 It had to be modified to this form to annotate the key with js_type. */
    bool has_new_hot_key;
    ic_base_types_pb_v1_PrincipalId new_hot_key;
} ic_nns_governance_pb_v1_ManageNeuron_AddHotKey;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount {
    uint64_t e8s;
} ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_Follow {
    ic_nns_governance_pb_v1_Topic topic;
    pb_size_t followees_count;
    ic_base_types_pb_v1_NeuronId followees[15];
} ic_nns_governance_pb_v1_ManageNeuron_Follow;

/* The response of the ManageNeuron command

 There is a dedicated response type for each `ManageNeuron.command` field */
typedef struct _ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay {
    uint32_t additional_dissolve_delay_seconds;
} ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity {
    uint32_t percentage_to_merge;
} ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_RegisterVote {
    bool has_proposal;
    ic_base_types_pb_v1_ProposalId proposal;
    ic_nns_governance_pb_v1_Vote vote;
} ic_nns_governance_pb_v1_ManageNeuron_RegisterVote;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey {
    bool has_hot_key_to_remove;
    ic_base_types_pb_v1_PrincipalId hot_key_to_remove;
} ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_Spawn {
    bool has_new_controller;
    ic_base_types_pb_v1_PrincipalId new_controller;
} ic_nns_governance_pb_v1_ManageNeuron_Spawn;

typedef struct _ic_nns_governance_pb_v1_NeuronInfo {
    uint64_t retrieved_at_timestamp_seconds;
    uint64_t age_seconds;
    uint64_t dissolve_delay_seconds;
    pb_callback_t recent_ballots;
    uint64_t voting_power;
    uint64_t created_timestamp_seconds;
} ic_nns_governance_pb_v1_NeuronInfo;

typedef struct _ic_nns_governance_pb_v1_NeuronStakeTransfer {
    uint64_t transfer_timestamp;
    bool has_from;
    ic_base_types_pb_v1_PrincipalId from;
    pb_callback_t from_subaccount;
    pb_callback_t to_subaccount;
    uint64_t neuron_stake_e8s;
    uint64_t block_height;
    uint64_t memo;
} ic_nns_governance_pb_v1_NeuronStakeTransfer;

typedef struct _ic_nns_governance_pb_v1_Neuron_FolloweesEntry {
    int32_t key;
    bool has_value;
    ic_nns_governance_pb_v1_Neuron_Followees value;
} ic_nns_governance_pb_v1_Neuron_FolloweesEntry;

typedef struct _ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry {
    uint64_t key;
    bool has_value;
    ic_nns_governance_pb_v1_NeuronInfo value;
} ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry;

typedef struct _ic_nns_governance_pb_v1_ManageNeuronResponse {
    pb_size_t which_command;
    union {
        ic_nns_governance_pb_v1_GovernanceError error;
        ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse configure;
        ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse disburse;
        ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse spawn;
        ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse follow;
        ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse register_vote;
        ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse merge_maturity;
    } command;
} ic_nns_governance_pb_v1_ManageNeuronResponse;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_Configure {
    pb_size_t which_operation;
    union {
        ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay increase_dissolve_delay;
        ic_nns_governance_pb_v1_ManageNeuron_StartDissolving start_dissolving;
        ic_nns_governance_pb_v1_ManageNeuron_StopDissolving stop_dissolving;
        ic_nns_governance_pb_v1_ManageNeuron_AddHotKey add_hot_key;
        ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey remove_hot_key;
        ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund join_community_fund;
    } operation;
} ic_nns_governance_pb_v1_ManageNeuron_Configure;

typedef struct _ic_nns_governance_pb_v1_ManageNeuron_Disburse {
    bool has_amount;
    ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount amount;
    bool has_to_account;
    ic_ledger_pb_v1_AccountIdentifier to_account;
} ic_nns_governance_pb_v1_ManageNeuron_Disburse;

typedef struct _ic_nns_governance_pb_v1_Neuron {
    bool has_id;
    ic_base_types_pb_v1_NeuronId id;
    pb_callback_t account;
    bool has_controller;
    ic_base_types_pb_v1_PrincipalId controller;
    pb_callback_t hot_keys;
    uint64_t cached_neuron_stake_e8s;
    uint64_t neuron_fees_e8s;
    uint64_t created_timestamp_seconds;
    uint64_t aging_since_timestamp_seconds;
    pb_size_t which_dissolve_state;
    union {
        uint64_t when_dissolved_timestamp_seconds;
        uint64_t dissolve_delay_seconds;
    } dissolve_state;
    pb_callback_t followees;
    pb_callback_t recent_ballots;
    bool kyc_verified;
    bool has_transfer;
    ic_nns_governance_pb_v1_NeuronStakeTransfer transfer;
    uint64_t maturity_e8s_equivalent;
    bool not_for_profit;
} ic_nns_governance_pb_v1_Neuron;

typedef PB_BYTES_ARRAY_T(32) ic_nns_governance_pb_v1_ManageNeuron_subaccount_t;
/* All operations that modify the state of an existing neuron are
 represented by instances of `ManageNeuron`.

 All commands are available to the `controller` of the neuron. In
 addition, commands related to voting, i.g., [manage_neuron::Follow]
 and [manage_neuron::RegisterVote], are also available to the
 registered hot keys of the neuron. */
typedef struct _ic_nns_governance_pb_v1_ManageNeuron {
    /* This is the legacy way to specify neuron IDs that is now discouraged. */
    bool has_id;
    ic_base_types_pb_v1_NeuronId id;
    pb_size_t which_command;
    union {
        ic_nns_governance_pb_v1_ManageNeuron_Configure configure;
        ic_nns_governance_pb_v1_ManageNeuron_Disburse disburse;
        ic_nns_governance_pb_v1_ManageNeuron_Spawn spawn;
        ic_nns_governance_pb_v1_ManageNeuron_Follow follow;
        ic_nns_governance_pb_v1_ManageNeuron_RegisterVote register_vote;
        ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity merge_maturity;
    } command;
    pb_size_t which_neuron_id_or_subaccount;
    union {
        ic_nns_governance_pb_v1_ManageNeuron_subaccount_t subaccount;
        ic_base_types_pb_v1_NeuronId neuron_id;
    } neuron_id_or_subaccount;
} ic_nns_governance_pb_v1_ManageNeuron;


/* Helper constants for enums */
#define _ic_nns_governance_pb_v1_Vote_MIN ic_nns_governance_pb_v1_Vote_VOTE_UNSPECIFIED
#define _ic_nns_governance_pb_v1_Vote_MAX ic_nns_governance_pb_v1_Vote_VOTE_NO
#define _ic_nns_governance_pb_v1_Vote_ARRAYSIZE ((ic_nns_governance_pb_v1_Vote)(ic_nns_governance_pb_v1_Vote_VOTE_NO+1))

#define _ic_nns_governance_pb_v1_Topic_MIN ic_nns_governance_pb_v1_Topic_TOPIC_UNSPECIFIED
#define _ic_nns_governance_pb_v1_Topic_MAX ic_nns_governance_pb_v1_Topic_TOPIC_NODE_PROVIDER_REWARDS
#define _ic_nns_governance_pb_v1_Topic_ARRAYSIZE ((ic_nns_governance_pb_v1_Topic)(ic_nns_governance_pb_v1_Topic_TOPIC_NODE_PROVIDER_REWARDS+1))

#define _ic_nns_governance_pb_v1_GovernanceError_ErrorType_MIN ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_UNSPECIFIED
#define _ic_nns_governance_pb_v1_GovernanceError_ErrorType_MAX ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INVALID_PROPOSAL
#define _ic_nns_governance_pb_v1_GovernanceError_ErrorType_ARRAYSIZE ((ic_nns_governance_pb_v1_GovernanceError_ErrorType)(ic_nns_governance_pb_v1_GovernanceError_ErrorType_ERROR_TYPE_INVALID_PROPOSAL+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ic_nns_governance_pb_v1_ManageNeuron_init_default {false, ic_base_types_pb_v1_NeuronId_init_default, 0, {ic_nns_governance_pb_v1_ManageNeuron_Configure_init_default}, 0, {{0, {0}}}}
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_init_default {false, ic_base_types_pb_v1_PrincipalId_init_default}
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_init_default {false, ic_base_types_pb_v1_PrincipalId_init_default}
#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_init_default {0, {ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_init_default}}
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_init_default {false, ic_base_types_pb_v1_PrincipalId_init_default}
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_init_default {false, ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_init_default, false, ic_ledger_pb_v1_AccountIdentifier_init_default}
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_init_default {_ic_nns_governance_pb_v1_Topic_MIN, 0, {ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default, ic_base_types_pb_v1_NeuronId_init_default}}
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_init_default {false, ic_base_types_pb_v1_ProposalId_init_default, _ic_nns_governance_pb_v1_Vote_MIN}
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_init_default {0, {ic_nns_governance_pb_v1_GovernanceError_init_default}}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_init_default {false, ic_base_types_pb_v1_NeuronId_init_default}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_init_default {0, 0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_init_default {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_init_default {0}
#define ic_nns_governance_pb_v1_GovernanceError_init_default {_ic_nns_governance_pb_v1_GovernanceError_ErrorType_MIN, {{NULL}, NULL}}
#define ic_nns_governance_pb_v1_ListNeurons_init_default {{{NULL}, NULL}, 0}
#define ic_nns_governance_pb_v1_ListNeuronsResponse_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_init_default {0, false, ic_nns_governance_pb_v1_NeuronInfo_init_default}
#define ic_nns_governance_pb_v1_BallotInfo_init_default {false, ic_base_types_pb_v1_ProposalId_init_default, _ic_nns_governance_pb_v1_Vote_MIN}
#define ic_nns_governance_pb_v1_NeuronInfo_init_default {0, 0, 0, {{NULL}, NULL}, 0, 0}
#define ic_nns_governance_pb_v1_Neuron_init_default {false, ic_base_types_pb_v1_NeuronId_init_default, {{NULL}, NULL}, false, ic_base_types_pb_v1_PrincipalId_init_default, {{NULL}, NULL}, 0, 0, 0, 0, 0, {0}, {{NULL}, NULL}, {{NULL}, NULL}, 0, false, ic_nns_governance_pb_v1_NeuronStakeTransfer_init_default, 0, 0}
#define ic_nns_governance_pb_v1_Neuron_Followees_init_default {{{NULL}, NULL}}
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_init_default {0, false, ic_nns_governance_pb_v1_Neuron_Followees_init_default}
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_init_default {0, false, ic_base_types_pb_v1_PrincipalId_init_default, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0}
#define ic_nns_governance_pb_v1_ManageNeuron_init_zero {false, ic_base_types_pb_v1_NeuronId_init_zero, 0, {ic_nns_governance_pb_v1_ManageNeuron_Configure_init_zero}, 0, {{0, {0}}}}
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_init_zero {false, ic_base_types_pb_v1_PrincipalId_init_zero}
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_init_zero {false, ic_base_types_pb_v1_PrincipalId_init_zero}
#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_init_zero {0, {ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_init_zero}}
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_init_zero {false, ic_base_types_pb_v1_PrincipalId_init_zero}
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_init_zero {false, ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_init_zero, false, ic_ledger_pb_v1_AccountIdentifier_init_zero}
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_init_zero {_ic_nns_governance_pb_v1_Topic_MIN, 0, {ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero, ic_base_types_pb_v1_NeuronId_init_zero}}
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_init_zero {false, ic_base_types_pb_v1_ProposalId_init_zero, _ic_nns_governance_pb_v1_Vote_MIN}
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_init_zero {0, {ic_nns_governance_pb_v1_GovernanceError_init_zero}}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_init_zero {false, ic_base_types_pb_v1_NeuronId_init_zero}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_init_zero {0, 0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_init_zero {0}
#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_init_zero {0}
#define ic_nns_governance_pb_v1_GovernanceError_init_zero {_ic_nns_governance_pb_v1_GovernanceError_ErrorType_MIN, {{NULL}, NULL}}
#define ic_nns_governance_pb_v1_ListNeurons_init_zero {{{NULL}, NULL}, 0}
#define ic_nns_governance_pb_v1_ListNeuronsResponse_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_init_zero {0, false, ic_nns_governance_pb_v1_NeuronInfo_init_zero}
#define ic_nns_governance_pb_v1_BallotInfo_init_zero {false, ic_base_types_pb_v1_ProposalId_init_zero, _ic_nns_governance_pb_v1_Vote_MIN}
#define ic_nns_governance_pb_v1_NeuronInfo_init_zero {0, 0, 0, {{NULL}, NULL}, 0, 0}
#define ic_nns_governance_pb_v1_Neuron_init_zero {false, ic_base_types_pb_v1_NeuronId_init_zero, {{NULL}, NULL}, false, ic_base_types_pb_v1_PrincipalId_init_zero, {{NULL}, NULL}, 0, 0, 0, 0, 0, {0}, {{NULL}, NULL}, {{NULL}, NULL}, 0, false, ic_nns_governance_pb_v1_NeuronStakeTransfer_init_zero, 0, 0}
#define ic_nns_governance_pb_v1_Neuron_Followees_init_zero {{{NULL}, NULL}}
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_init_zero {0, false, ic_nns_governance_pb_v1_Neuron_Followees_init_zero}
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_init_zero {0, false, ic_base_types_pb_v1_PrincipalId_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ic_nns_governance_pb_v1_ListNeuronsResponse_neuron_ids_tag 1
#define ic_nns_governance_pb_v1_ListNeuronsResponse_full_neurons_tag 2
#define ic_nns_governance_pb_v1_Neuron_Followees_followees_tag 1
#define ic_nns_governance_pb_v1_BallotInfo_proposal_id_tag 1
#define ic_nns_governance_pb_v1_BallotInfo_vote_tag 2
#define ic_nns_governance_pb_v1_GovernanceError_error_type_tag 1
#define ic_nns_governance_pb_v1_GovernanceError_error_message_tag 2
#define ic_nns_governance_pb_v1_ListNeurons_neuron_ids_tag 1
#define ic_nns_governance_pb_v1_ListNeurons_include_neurons_readable_by_caller_tag 2
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_transfer_block_height_tag 1
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_merged_maturity_e8s_tag 1
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_new_stake_e8s_tag 2
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_created_neuron_id_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_new_hot_key_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_e8s_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_topic_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_followees_tag 2
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_additional_dissolve_delay_seconds_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_percentage_to_merge_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_proposal_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_vote_tag 2
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_hot_key_to_remove_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_new_controller_tag 1
#define ic_nns_governance_pb_v1_NeuronInfo_retrieved_at_timestamp_seconds_tag 1
#define ic_nns_governance_pb_v1_NeuronInfo_age_seconds_tag 3
#define ic_nns_governance_pb_v1_NeuronInfo_dissolve_delay_seconds_tag 4
#define ic_nns_governance_pb_v1_NeuronInfo_recent_ballots_tag 5
#define ic_nns_governance_pb_v1_NeuronInfo_voting_power_tag 6
#define ic_nns_governance_pb_v1_NeuronInfo_created_timestamp_seconds_tag 7
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_transfer_timestamp_tag 1
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_from_tag 2
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_from_subaccount_tag 3
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_to_subaccount_tag 4
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_neuron_stake_e8s_tag 5
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_block_height_tag 6
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_memo_tag 7
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_key_tag 1
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_value_tag 2
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_key_tag 1
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_value_tag 2
#define ic_nns_governance_pb_v1_ManageNeuronResponse_error_tag 1
#define ic_nns_governance_pb_v1_ManageNeuronResponse_configure_tag 2
#define ic_nns_governance_pb_v1_ManageNeuronResponse_disburse_tag 3
#define ic_nns_governance_pb_v1_ManageNeuronResponse_spawn_tag 4
#define ic_nns_governance_pb_v1_ManageNeuronResponse_follow_tag 5
#define ic_nns_governance_pb_v1_ManageNeuronResponse_register_vote_tag 7
#define ic_nns_governance_pb_v1_ManageNeuronResponse_merge_maturity_tag 11
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_increase_dissolve_delay_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_start_dissolving_tag 2
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_stop_dissolving_tag 3
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_add_hot_key_tag 4
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_remove_hot_key_tag 5
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_join_community_fund_tag 7
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_amount_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_to_account_tag 2
#define ic_nns_governance_pb_v1_Neuron_id_tag    1
#define ic_nns_governance_pb_v1_Neuron_account_tag 2
#define ic_nns_governance_pb_v1_Neuron_controller_tag 3
#define ic_nns_governance_pb_v1_Neuron_hot_keys_tag 4
#define ic_nns_governance_pb_v1_Neuron_cached_neuron_stake_e8s_tag 5
#define ic_nns_governance_pb_v1_Neuron_neuron_fees_e8s_tag 6
#define ic_nns_governance_pb_v1_Neuron_created_timestamp_seconds_tag 7
#define ic_nns_governance_pb_v1_Neuron_aging_since_timestamp_seconds_tag 8
#define ic_nns_governance_pb_v1_Neuron_when_dissolved_timestamp_seconds_tag 9
#define ic_nns_governance_pb_v1_Neuron_dissolve_delay_seconds_tag 10
#define ic_nns_governance_pb_v1_Neuron_followees_tag 11
#define ic_nns_governance_pb_v1_Neuron_recent_ballots_tag 12
#define ic_nns_governance_pb_v1_Neuron_kyc_verified_tag 13
#define ic_nns_governance_pb_v1_Neuron_transfer_tag 14
#define ic_nns_governance_pb_v1_Neuron_maturity_e8s_equivalent_tag 15
#define ic_nns_governance_pb_v1_Neuron_not_for_profit_tag 16
#define ic_nns_governance_pb_v1_ManageNeuron_id_tag 1
#define ic_nns_governance_pb_v1_ManageNeuron_configure_tag 2
#define ic_nns_governance_pb_v1_ManageNeuron_disburse_tag 3
#define ic_nns_governance_pb_v1_ManageNeuron_spawn_tag 4
#define ic_nns_governance_pb_v1_ManageNeuron_follow_tag 5
#define ic_nns_governance_pb_v1_ManageNeuron_register_vote_tag 7
#define ic_nns_governance_pb_v1_ManageNeuron_merge_maturity_tag 13
#define ic_nns_governance_pb_v1_ManageNeuron_subaccount_tag 11
#define ic_nns_governance_pb_v1_ManageNeuron_neuron_id_tag 12

/* Struct field encoding specification for nanopb */
#define ic_nns_governance_pb_v1_ManageNeuron_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,configure,command.configure),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,disburse,command.disburse),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,spawn,command.spawn),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,follow,command.follow),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,register_vote,command.register_vote),   7) \
X(a, STATIC,   ONEOF,    BYTES,    (neuron_id_or_subaccount,subaccount,neuron_id_or_subaccount.subaccount),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (neuron_id_or_subaccount,neuron_id,neuron_id_or_subaccount.neuron_id),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,merge_maturity,command.merge_maturity),  13)
#define ic_nns_governance_pb_v1_ManageNeuron_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_id_MSGTYPE ic_base_types_pb_v1_NeuronId
#define ic_nns_governance_pb_v1_ManageNeuron_command_configure_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_Configure
#define ic_nns_governance_pb_v1_ManageNeuron_command_disburse_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_Disburse
#define ic_nns_governance_pb_v1_ManageNeuron_command_spawn_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_Spawn
#define ic_nns_governance_pb_v1_ManageNeuron_command_follow_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_Follow
#define ic_nns_governance_pb_v1_ManageNeuron_command_register_vote_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_RegisterVote
#define ic_nns_governance_pb_v1_ManageNeuron_neuron_id_or_subaccount_neuron_id_MSGTYPE ic_base_types_pb_v1_NeuronId
#define ic_nns_governance_pb_v1_ManageNeuron_command_merge_maturity_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity

#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   additional_dissolve_delay_seconds,   1)
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  new_hot_key,       1)
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_new_hot_key_MSGTYPE ic_base_types_pb_v1_PrincipalId

#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  hot_key_to_remove,   1)
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_hot_key_to_remove_MSGTYPE ic_base_types_pb_v1_PrincipalId

#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuron_Configure_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,increase_dissolve_delay,operation.increase_dissolve_delay),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,start_dissolving,operation.start_dissolving),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,stop_dissolving,operation.stop_dissolving),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,add_hot_key,operation.add_hot_key),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,remove_hot_key,operation.remove_hot_key),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (operation,join_community_fund,operation.join_community_fund),   7)
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_increase_dissolve_delay_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_start_dissolving_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_StartDissolving
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_stop_dissolving_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_StopDissolving
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_add_hot_key_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_AddHotKey
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_remove_hot_key_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_operation_join_community_fund_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund

#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  new_controller,    1)
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_new_controller_MSGTYPE ic_base_types_pb_v1_PrincipalId

#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  amount,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  to_account,        2)
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_amount_MSGTYPE ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_to_account_MSGTYPE ic_ledger_pb_v1_AccountIdentifier

#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   e8s,               1)
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuron_Follow_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    topic,             1) \
X(a, STATIC,   REPEATED, MESSAGE,  followees,         2)
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_followees_MSGTYPE ic_base_types_pb_v1_NeuronId

#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  proposal,          1) \
X(a, STATIC,   SINGULAR, UENUM,    vote,              2)
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_proposal_MSGTYPE ic_base_types_pb_v1_ProposalId

#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   percentage_to_merge,   1)
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuronResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,error,command.error),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,configure,command.configure),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,disburse,command.disburse),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,spawn,command.spawn),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,follow,command.follow),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,register_vote,command.register_vote),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,merge_maturity,command.merge_maturity),  11)
#define ic_nns_governance_pb_v1_ManageNeuronResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_error_MSGTYPE ic_nns_governance_pb_v1_GovernanceError
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_configure_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_disburse_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_spawn_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_follow_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_register_vote_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse
#define ic_nns_governance_pb_v1_ManageNeuronResponse_command_merge_maturity_MSGTYPE ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse

#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   transfer_block_height,   1)
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  created_neuron_id,   1)
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_DEFAULT NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_created_neuron_id_MSGTYPE ic_base_types_pb_v1_NeuronId

#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   merged_maturity_e8s,   1) \
X(a, STATIC,   SINGULAR, UINT64,   new_stake_e8s,     2)
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_DEFAULT NULL

#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_FIELDLIST(X, a) \

#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_CALLBACK NULL
#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_DEFAULT NULL

#define ic_nns_governance_pb_v1_GovernanceError_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_type,        1) \
X(a, CALLBACK, SINGULAR, STRING,   error_message,     2)
#define ic_nns_governance_pb_v1_GovernanceError_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_GovernanceError_DEFAULT NULL

#define ic_nns_governance_pb_v1_ListNeurons_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, FIXED64,  neuron_ids,        1) \
X(a, STATIC,   SINGULAR, BOOL,     include_neurons_readable_by_caller,   2)
#define ic_nns_governance_pb_v1_ListNeurons_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_ListNeurons_DEFAULT NULL

#define ic_nns_governance_pb_v1_ListNeuronsResponse_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  neuron_ids,        1) \
X(a, CALLBACK, REPEATED, MESSAGE,  full_neurons,      2)
#define ic_nns_governance_pb_v1_ListNeuronsResponse_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_ListNeuronsResponse_DEFAULT NULL
#define ic_nns_governance_pb_v1_ListNeuronsResponse_neuron_ids_MSGTYPE ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry
#define ic_nns_governance_pb_v1_ListNeuronsResponse_full_neurons_MSGTYPE ic_nns_governance_pb_v1_Neuron

#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED64,  key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_CALLBACK NULL
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_DEFAULT NULL
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_value_MSGTYPE ic_nns_governance_pb_v1_NeuronInfo

#define ic_nns_governance_pb_v1_BallotInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  proposal_id,       1) \
X(a, STATIC,   SINGULAR, UENUM,    vote,              2)
#define ic_nns_governance_pb_v1_BallotInfo_CALLBACK NULL
#define ic_nns_governance_pb_v1_BallotInfo_DEFAULT NULL
#define ic_nns_governance_pb_v1_BallotInfo_proposal_id_MSGTYPE ic_base_types_pb_v1_ProposalId

#define ic_nns_governance_pb_v1_NeuronInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   retrieved_at_timestamp_seconds,   1) \
X(a, STATIC,   SINGULAR, UINT64,   age_seconds,       3) \
X(a, STATIC,   SINGULAR, UINT64,   dissolve_delay_seconds,   4) \
X(a, CALLBACK, REPEATED, MESSAGE,  recent_ballots,    5) \
X(a, STATIC,   SINGULAR, UINT64,   voting_power,      6) \
X(a, STATIC,   SINGULAR, UINT64,   created_timestamp_seconds,   7)
#define ic_nns_governance_pb_v1_NeuronInfo_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_NeuronInfo_DEFAULT NULL
#define ic_nns_governance_pb_v1_NeuronInfo_recent_ballots_MSGTYPE ic_nns_governance_pb_v1_BallotInfo

#define ic_nns_governance_pb_v1_Neuron_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, CALLBACK, SINGULAR, BYTES,    account,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  controller,        3) \
X(a, CALLBACK, REPEATED, MESSAGE,  hot_keys,          4) \
X(a, STATIC,   SINGULAR, UINT64,   cached_neuron_stake_e8s,   5) \
X(a, STATIC,   SINGULAR, UINT64,   neuron_fees_e8s,   6) \
X(a, STATIC,   SINGULAR, UINT64,   created_timestamp_seconds,   7) \
X(a, STATIC,   SINGULAR, UINT64,   aging_since_timestamp_seconds,   8) \
X(a, STATIC,   ONEOF,    UINT64,   (dissolve_state,when_dissolved_timestamp_seconds,dissolve_state.when_dissolved_timestamp_seconds),   9) \
X(a, STATIC,   ONEOF,    UINT64,   (dissolve_state,dissolve_delay_seconds,dissolve_state.dissolve_delay_seconds),  10) \
X(a, CALLBACK, REPEATED, MESSAGE,  followees,        11) \
X(a, CALLBACK, REPEATED, MESSAGE,  recent_ballots,   12) \
X(a, STATIC,   SINGULAR, BOOL,     kyc_verified,     13) \
X(a, STATIC,   OPTIONAL, MESSAGE,  transfer,         14) \
X(a, STATIC,   SINGULAR, UINT64,   maturity_e8s_equivalent,  15) \
X(a, STATIC,   SINGULAR, BOOL,     not_for_profit,   16)
#define ic_nns_governance_pb_v1_Neuron_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_Neuron_DEFAULT NULL
#define ic_nns_governance_pb_v1_Neuron_id_MSGTYPE ic_base_types_pb_v1_NeuronId
#define ic_nns_governance_pb_v1_Neuron_controller_MSGTYPE ic_base_types_pb_v1_PrincipalId
#define ic_nns_governance_pb_v1_Neuron_hot_keys_MSGTYPE ic_base_types_pb_v1_PrincipalId
#define ic_nns_governance_pb_v1_Neuron_followees_MSGTYPE ic_nns_governance_pb_v1_Neuron_FolloweesEntry
#define ic_nns_governance_pb_v1_Neuron_recent_ballots_MSGTYPE ic_nns_governance_pb_v1_BallotInfo
#define ic_nns_governance_pb_v1_Neuron_transfer_MSGTYPE ic_nns_governance_pb_v1_NeuronStakeTransfer

#define ic_nns_governance_pb_v1_Neuron_Followees_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  followees,         1)
#define ic_nns_governance_pb_v1_Neuron_Followees_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_Neuron_Followees_DEFAULT NULL
#define ic_nns_governance_pb_v1_Neuron_Followees_followees_MSGTYPE ic_base_types_pb_v1_NeuronId

#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    key,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  value,             2)
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_CALLBACK NULL
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_DEFAULT NULL
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_value_MSGTYPE ic_nns_governance_pb_v1_Neuron_Followees

#define ic_nns_governance_pb_v1_NeuronStakeTransfer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   transfer_timestamp,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  from,              2) \
X(a, CALLBACK, SINGULAR, BYTES,    from_subaccount,   3) \
X(a, CALLBACK, SINGULAR, BYTES,    to_subaccount,     4) \
X(a, STATIC,   SINGULAR, UINT64,   neuron_stake_e8s,   5) \
X(a, STATIC,   SINGULAR, UINT64,   block_height,      6) \
X(a, STATIC,   SINGULAR, UINT64,   memo,              7)
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_CALLBACK pb_default_field_callback
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_DEFAULT NULL
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_from_MSGTYPE ic_base_types_pb_v1_PrincipalId

extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_Configure_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_Spawn_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_Disburse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_Follow_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_GovernanceError_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ListNeurons_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ListNeuronsResponse_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_BallotInfo_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_NeuronInfo_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_Neuron_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_Neuron_Followees_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_Neuron_FolloweesEntry_msg;
extern const pb_msgdesc_t ic_nns_governance_pb_v1_NeuronStakeTransfer_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ic_nns_governance_pb_v1_ManageNeuron_fields &ic_nns_governance_pb_v1_ManageNeuron_msg
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_fields &ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_msg
#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_fields &ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_msg
#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_fields &ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_msg
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_fields &ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_msg
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_fields &ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_msg
#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_fields &ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_msg
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_fields &ic_nns_governance_pb_v1_ManageNeuron_Configure_msg
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_fields &ic_nns_governance_pb_v1_ManageNeuron_Spawn_msg
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_fields &ic_nns_governance_pb_v1_ManageNeuron_Disburse_msg
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_fields &ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_msg
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_fields &ic_nns_governance_pb_v1_ManageNeuron_Follow_msg
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_fields &ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_msg
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_fields &ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_msg
#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_fields &ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_msg
#define ic_nns_governance_pb_v1_GovernanceError_fields &ic_nns_governance_pb_v1_GovernanceError_msg
#define ic_nns_governance_pb_v1_ListNeurons_fields &ic_nns_governance_pb_v1_ListNeurons_msg
#define ic_nns_governance_pb_v1_ListNeuronsResponse_fields &ic_nns_governance_pb_v1_ListNeuronsResponse_msg
#define ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_fields &ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_msg
#define ic_nns_governance_pb_v1_BallotInfo_fields &ic_nns_governance_pb_v1_BallotInfo_msg
#define ic_nns_governance_pb_v1_NeuronInfo_fields &ic_nns_governance_pb_v1_NeuronInfo_msg
#define ic_nns_governance_pb_v1_Neuron_fields &ic_nns_governance_pb_v1_Neuron_msg
#define ic_nns_governance_pb_v1_Neuron_Followees_fields &ic_nns_governance_pb_v1_Neuron_Followees_msg
#define ic_nns_governance_pb_v1_Neuron_FolloweesEntry_fields &ic_nns_governance_pb_v1_Neuron_FolloweesEntry_msg
#define ic_nns_governance_pb_v1_NeuronStakeTransfer_fields &ic_nns_governance_pb_v1_NeuronStakeTransfer_msg

/* Maximum encoded size of messages (where known) */
/* ic_nns_governance_pb_v1_ManageNeuronResponse_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_GovernanceError_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_ListNeurons_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_ListNeuronsResponse_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_ListNeuronsResponse_NeuronMapEntry_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_NeuronInfo_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_Neuron_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_Neuron_Followees_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_Neuron_FolloweesEntry_size depends on runtime parameters */
/* ic_nns_governance_pb_v1_NeuronStakeTransfer_size depends on runtime parameters */
#define ic_nns_governance_pb_v1_BallotInfo_size  15
#define ic_nns_governance_pb_v1_ManageNeuronResponse_ConfigureResponse_size 0
#define ic_nns_governance_pb_v1_ManageNeuronResponse_DisburseResponse_size 11
#define ic_nns_governance_pb_v1_ManageNeuronResponse_FollowResponse_size 0
#define ic_nns_governance_pb_v1_ManageNeuronResponse_MergeMaturityResponse_size 22
#define ic_nns_governance_pb_v1_ManageNeuronResponse_RegisterVoteResponse_size 0
#define ic_nns_governance_pb_v1_ManageNeuronResponse_SpawnResponse_size 13
#define ic_nns_governance_pb_v1_ManageNeuron_AddHotKey_size 34
#define ic_nns_governance_pb_v1_ManageNeuron_Configure_size 36
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_Amount_size 11
#define ic_nns_governance_pb_v1_ManageNeuron_Disburse_size 50
#define ic_nns_governance_pb_v1_ManageNeuron_Follow_size 197
#define ic_nns_governance_pb_v1_ManageNeuron_IncreaseDissolveDelay_size 6
#define ic_nns_governance_pb_v1_ManageNeuron_JoinCommunityFund_size 0
#define ic_nns_governance_pb_v1_ManageNeuron_MergeMaturity_size 6
#define ic_nns_governance_pb_v1_ManageNeuron_RegisterVote_size 15
#define ic_nns_governance_pb_v1_ManageNeuron_RemoveHotKey_size 34
#define ic_nns_governance_pb_v1_ManageNeuron_Spawn_size 34
#define ic_nns_governance_pb_v1_ManageNeuron_StartDissolving_size 0
#define ic_nns_governance_pb_v1_ManageNeuron_StopDissolving_size 0
#define ic_nns_governance_pb_v1_ManageNeuron_size 247

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
